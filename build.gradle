plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id "io.qameta.allure" version "2.8.1"
}

repositories {
   // jcenter()
    mavenCentral()
}

dependencies {
    implementation 'com.google.guava:guava:21.0-jre'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.2'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile("io.github.bonigarcia:webdrivermanager:3.7.0")
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: '5.7.0'
    testImplementation group: 'io.cucumber', name: 'cucumber-testng', version: '5.7.0'
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: '5.7.0'
    testImplementation group: 'io.qameta.allure', name: 'allure-cucumber6-jvm', version: '2.13.6'
}

test {
    useTestNG()
}

checkstyle {
    toolVersion = '8.37'
    configFile = file("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

allure {
    version = '2.8.1'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.13.6'
}

application {
    mainClassName = 'pivotal.App'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task executeBDDTests(type: Test) {
    useTestNG()
    exclude 'java/unitui/**'
    options {
        useDefaultListeners = false
        jvmArgs = ['-Dcucumber.plugin=io.qameta.allure.cucumber6jvm.AllureCucumber6Jvm']
        jvmArgs = ['-Dcucumber.plugin=rerun:build/target/rerun.txt']
        jvmArgs = ['-Dcucumber.filter.tags=' + filterTags]
        jvmArgs = ['-DcucumberThreadCount=' + cucumberThreadCount]
    }
    testLogging.showStandardStreams = true
    scanForTestClasses = false
    finalizedBy 'allureReport'
}

task reExecuteBDDTests(type: Test) {
    useTestNG()
    exclude 'java/unitui/**'
    options {
        useDefaultListeners = false
        jvmArgs = ['-Dcucumber.plugin=io.qameta.allure.cucumber6jvm.AllureCucumber6Jvm']
        jvmArgs = ['-Dcucumber.plugin=rerun:build/target/rerun.txt']
        jvmArgs = ['-Dcucumber.filter.tags=' + filterTags]
        jvmArgs = ['-DcucumberThreadCount=' + cucumberThreadCount]
    }
    testLogging.showStandardStreams = true
    scanForTestClasses = false
    finalizedBy 'allureReport'
}
